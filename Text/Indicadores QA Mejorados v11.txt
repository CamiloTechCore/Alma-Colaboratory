<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Indicadores QA</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        /* General styles */
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f4f7f6; /* Soft background */
            color: #333;
            line-height: 1.6;
            padding: 20px;
        }

        h3 {
            color: #1a237e; /* Dark blue for titles */
            margin-top: 20px;
            margin-bottom: 5px; /* Reduced margin to fit the note */
            border-bottom: 2px solid #e0e0e0; /* Subtle line */
            padding-bottom: 10px;
            display: flex;
            align-items: center;
            font-size: 1.6em;
            cursor: pointer; /* Indicate clickable */
            user-select: none; /* Prevent text selection on click */
        }

        h3 .icon {
            margin-right: 10px;
            color: #007bff; /* Accent color */
            transition: transform 0.3s ease; /* Smooth rotation for icon */
        }

         h3.collapsed .icon {
            transform: rotate(-90deg); /* Rotate icon when collapsed */
        }

         /* Bell icon animation */
        .bell-icon {
            margin-left: 10px; /* Space after title */
            color: #ffc107; /* Yellow color for bell */
            font-size: 1.2em;
            animation: shake 2s cubic-bezier(.36,.07,.19,.97) infinite; /* Shaking animation */
            transform-origin: top center; /* Shake from the top */
            border: 1px solid blue; /* Blue border */
            padding: 2px; /* Padding inside border */
            border-radius: 4px; /* Slightly rounded corners for border */
        }

        @keyframes shake {
            0% { transform: rotate(0deg); }
            15% { transform: rotate(5deg); }
            30% { transform: rotate(-5deg); }
            45% { transform: rotate(5deg); }
            60% { transform: rotate(-5deg); }
            75% { transform: rotate(2deg); }
            85% { transform: rotate(-2deg); }
            92% { transform: rotate(1deg); }
            100% { transform: rotate(0deg); }
        }

        /* Click to view note */
        .click-note {
            font-size: 0.9em;
            color: #6c757d;
            margin-bottom: 15px;
            text-align: left;
             padding-left: 30px; /* Align with title text */
        }


        /* --- QA INDICATORS STYLES --- */
        #qaIndicatorsSection {
            margin-top: 20px;
            padding-top: 15px;
        }

         /* Collapsible content wrapper */
        .collapsible-content {
            overflow: hidden;
            transition: max-height 0.5s ease-in-out, opacity 0.5s ease-in-out;
            max-height: 0; /* Initially collapsed */
            opacity: 0; /* Initially hidden */
        }

        .collapsible-content.expanded {
            max-height: 1000px; /* Large enough to show content when expanded */
            opacity: 1;
        }


        /* Container for date filter and indicators */
        .qa-indicators-controls-container {
            display: flex;
            align-items: center;
            gap: 20px;
            margin-bottom: 20px;
            flex-wrap: wrap;
            background-color: #ffffff;
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            border: 1px solid #e0e0e0;
        }

        .control-group {
            /* flex: 1; Removed flex-grow to control width */
            min-width: 180px; /* Adjusted minimum width */
             max-width: 250px; /* Set a max width similar to general metrics filters */
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #343a40;
            font-size: 0.9em; /* Slightly smaller font */
            display: flex;
            align-items: center;
            gap: 6px;
        }

        label .icon {
            color: #555;
        }

        select {
            width: 100%;
            padding: 8px 10px; /* Adjusted padding */
            border-radius: 5px;
            border: 1px solid #ced4da;
            font-size: 0.9em; /* Adjusted font size */
            box-sizing: border-box;
            transition: border-color 0.2s ease, box-shadow 0.2s ease;
            background-color: #f8f9fa; /* Light background for select */
        }

        select:focus {
            border-color: #007bff;
            outline: 0;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }

        .qa-indicators-display {
            display: flex;
            flex-wrap: wrap;
            gap: 15px; /* Reduced space */
            justify-content: flex-start; /* Align blocks to the left */
            padding: 15px;
            background-color: #ffffff; /* White background */
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08); /* Improved shadow */
            border: 1px solid #e0e0e0;
        }

        /* Modified style for horizontal display */
        .user-metric-block {
            background-color: #ffffff;
            padding: 15px; /* Reduced padding */
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
            width: auto;
            text-align: left;
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: space-between; /* Space between metrics and TMO circle */
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            flex-grow: 1;
            min-width: 400px; /* Adjusted minimum width */
            border: 1px solid #e0e0e0; /* Subtle border */
        }

        .user-metric-block:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);
        }

        /* Removed user-info div as requested */
        /* .user-info { ... } */

        .metrics-container {
            display: flex;
            align-items: center;
            flex-grow: 1;
            justify-content: flex-start; /* Align metrics to the left */
            gap: 20px;
            flex-wrap: wrap; /* Allow metrics to wrap on small screens */
        }

        .metric-item {
            display: flex;
            flex-direction: column;
            align-items: center; /* Center text within metric item */
            font-size: 0.9em;
            color: #555;
            white-space: nowrap;
        }

        .metric-item strong {
            font-size: 1.1em;
            color: #333;
            margin-top: 3px;
        }

        /* TMO Progress Circle */
        .tmo-progress-circle {
            width: 80px; /* Increased Circle size */
            height: 80px; /* Increased Circle size */
            border-radius: 50%;
            background-color: #e0e0e0; /* Circle background */
            display: flex;
            flex-direction: column; /* Stack text vertically */
            align-items: center;
            justify-content: center;
            font-size: 0.8em; /* Adjusted font size */
            font-weight: bold;
            color: #333;
            position: relative;
            margin-left: 20px; /* Space to the left */
            flex-shrink: 0; /* Prevent shrinking */
            text-align: center;
        }

         .tmo-progress-circle strong {
             font-size: 1.5em; /* Increased TMO value size */
             color: #1a237e; /* Dark blue for value */
             margin-top: 3px;
         }


        .tmo-progress-circle::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border-radius: 50%;
            box-sizing: border-box;
            border: 6px solid transparent;
            /* border-top-color and border-right-color will be set by JS */
            transform: rotate(45deg); /* Adjust initial rotation */
            transition: border-color 0.5s ease, transform 1s ease-in-out;
        }

        /* Classes for progress colors (will be added by JS) */
        .tmo-progress-circle.green::before { border-top-color: #28a745; border-right-color: #28a745; }
        .tmo-progress-circle.yellow::before { border-top-color: #ffc107; border-right-color: #ffc107; }
        .tmo-progress-circle.red::before { border-top-color: #dc3545; border-right-color: #dc3545; }


        .productivity-note {
            font-size: 0.8em; /* Smaller font */
            color: #dc3545; /* Red */
            margin-top: 8px;
            font-weight: bold;
            text-align: center;
            width: 100%;
        }

        /* Styles for loading spinner (kept for potential future use within metric items) */
        .loading {
            display: flex;
            align-items: center;
            justify-content: center;
            color: #6c757d; /* Gray */
            font-size: 1em; /* Adjusted size */
            width: 100%; /* Ensure it takes space */
            text-align: center;
        }

        .loading i {
            margin-right: 8px; /* Keep margin for spacing if text is added later by JS */
            font-size: 1.2em;
            animation: spin 1.5s linear infinite;
        }

         @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Style for the TMO value inside the circle */
        .tmo-progress-circle .tmo-value-text {
             position: absolute;
             top: 55%; /* Adjusted position */
             left: 50%;
             transform: translate(-50%, -50%);
             z-index: 2; /* Above the pseudo-element */
             color: #333; /* Text color */
             font-size: 1.2em; /* Increased font size */
             font-weight: bold;
             text-align: center;
        }


        /* Style for the TMO label inside the circle */
         .tmo-progress-circle .tmo-label-text {
             position: absolute;
             top: 30%; /* Adjusted position */
             left: 50%;
             transform: translate(-50%, -50%);
             z-index: 2;
             color: #555; /* Label color */
             font-size: 0.9em; /* Increased font size */
             font-weight: normal;
             text-align: center;
         }


    </style>
</head>
<body>

<div id="qaIndicatorsSection">
    <h3 id="toggleQaIndicators">
        <i class="fas fa-chart-bar icon"></i>Indicadores QA
        <i class="fas fa-bell bell-icon"></i> </h3>
    <p class="click-note">Haz click en el título para ver los indicadores.</p>
     <div id="qaIndicatorsContent" class="collapsible-content">
        <div class="qa-indicators-controls-container">
            <div class="control-group">
                <label for="qaDaySelect"><i class="fas fa-calendar-alt icon"></i>Seleccionar Día:</label>
                <select id="qaDaySelect" disabled>
                    <option value="">Cargando Fechas...</option>
                </select>
            </div>
            </div>
        <div id="qaIndicatorsDisplay" class="qa-indicators-display">
            <div class="user-metric-block">
                 <div class="metrics-container">
                     <div class="metric-item">
                         Casos QA: <strong id="qaCases">XX</strong>
                     </div>
                     <div class="metric-item">
                         T Casos Cerrados: <strong id="qaClosedCases">XX</strong>
                     </div>
                      <div class="metric-item">
                         T Casos Asignados: <strong id="qaAssignedCases">XX</strong>
                     </div>
                     <div class="metric-item">
                         T Casos pendientes de gestión: <strong id="qaPendingCases">XX</strong>
                     </div>
                     <div class="metric-item">
                         Tiempo de gestión: <strong id="qaGestionTime">XX:XX</strong>
                     </div>
                     <div class="metric-item">
                         Tiempo inactivo: <strong id="qaInactiveTime">XX:XX</strong>
                     </div>
                     <div id="qaTmoCircle" class="tmo-progress-circle">
                         <span class="tmo-label-text">TMO</span>
                         <span class="tmo-value-text" id="qaTmoValue">XX:XX</span>
                     </div>
                 </div>
                 <div class="productivity-note" style="display: none;">Nota de productividad si aplica</div>
            </div>
             </div>
    </div>
</div>

<script>
    document.getElementById('toggleQaIndicators').addEventListener('click', function() {
        const content = document.getElementById('qaIndicatorsContent');
        const icon = this.querySelector('.icon');
        const bellIcon = this.querySelector('.bell-icon');

        content.classList.toggle('expanded'); // Use expanded class
        this.classList.toggle('collapsed'); // Toggle collapsed class on h3 for icon rotation

        // Stop shaking animation when expanded
        if (content.classList.contains('expanded')) {
            bellIcon.style.animation = 'none';
        } else {
            bellIcon.style.animation = 'shake 2s cubic-bezier(.36,.07,.19,.97) infinite';
        }

        // Optional: Adjust max-height dynamically if needed
         if (content.classList.contains('expanded')) {
             // Set max-height to scrollHeight to enable transition
             content.style.maxHeight = content.scrollHeight + "px";
         } else {
             content.style.maxHeight = null; // Reset max-height to allow collapse
         }
    });

    // Placeholder function to simulate loading and updating QA indicators
    function updateQaIndicators(data) {
        // Update metric values
        document.getElementById('qaCases').textContent = data.casosQA;
        document.getElementById('qaClosedCases').textContent = data.casosCerrados;
        document.getElementById('qaAssignedCases').textContent = data.casosAsignados;
        document.getElementById('qaPendingCases').textContent = data.casosPendientes;
        document.getElementById('qaGestionTime').textContent = data.tiempoGestion;
        document.getElementById('qaInactiveTime').textContent = data.tiempoInactivo;
        document.getElementById('qaTmoValue').textContent = data.tmo;

        // Update TMO circle color based on TMO value (example logic)
        const tmoCircle = document.getElementById('qaTmoCircle');
        tmoCircle.classList.remove('green', 'yellow', 'red'); // Remove existing color classes

        // Simple example logic: Green if TMO < 10 mins, Yellow if < 20 mins, Red otherwise
        const tmoParts = data.tmo.split(':').map(Number);
        const tmoInMinutes = tmoParts[0] * 60 + tmoParts[1];

        if (tmoInMinutes < 10) {
            tmoCircle.classList.add('green');
        } else if (tmoInMinutes < 20) {
            tmoCircle.classList.add('yellow');
        } else {
            tmoCircle.classList.add('red');
        }

        // Update the pseudo-element border color using a custom property
        // This is a simplified approach; a real progress circle would need SVG or more complex canvas drawing
        const progressColor = tmoCircle.classList.contains('green') ? '#28a745' : tmoCircle.classList.contains('yellow') ? '#ffc107' : '#dc3545';
        tmoCircle.style.setProperty('--progress-color', progressColor);

        // Note: The actual progress fill of the circle is not implemented in this CSS/HTML structure.
        // A true progress circle requires manipulating SVG stroke-dashoffset or drawing on a canvas.
    }

    // Example usage (you would call this after fetching data based on the selected day)
    // document.getElementById('qaDaySelect').addEventListener('change', function() {
    //     const selectedDay = this.value;
    //     // Fetch data based on selectedDay and call updateQaIndicators
    //     // updateQaIndicators({ casosQA: 50, casosCerrados: 45, casosAsignados: 60, casosPendientes: 15, tiempoGestion: '06:00', tiempoInactivo: '02:00', tmo: '08:30' });
    // });

    // Simulate initial data load for the example block (will only be visible when expanded)
     updateQaIndicators({ casosQA: 50, casosCerrados: 45, casosAsignados: 60, casosPendientes: 15, tiempoGestion: '06:00', tiempoInactivo: '02:00', tmo: '08:30' });

</script>

</body>
</html>
